{
"categories": [
    {
        "name": "Machine learning",
        "projects": [
            {
                "url": "https://github.com/psaikko/colorize",
                "reponame": "colorize",
                "image": "/assets/img/colorize.png",
                "description": "Implementing automatic colorization of grayscale images with deep convolutional networks using tensorflow."
            },
            {
                "url": "https://github.com/psaikko/tf-style-transfer",
                "reponame": "tf-style-transfer",
                "image": "/assets/img/tf-style-transfer.png",
                "description": "A repository for re-implementing and replicating the results of neural style transfer papers."
            },
            {
                "url": "https://github.com/psaikko/rnn-lyrics",
                "reponame": "rnn-lyrics",
                "description": "Generating song lyrics using recurrent neural networks. Includes a web demo created with tensorflow.js"
            },
            {
                "url": "https://github.com/psaikko/opi-tuntemaan-sienet",
                "reponame": "opi-tuntemaan-sienet",
                "image": "/assets/img/opi-tuntemaan-sienet.png",
                "description": "Using transfer learning to create a classifier for forest mushrooms. Gathering a dataset by (responsibly) scraping the web."
            },
            {
                "url": "https://github.com/psaikko/mnist-neural-networks",
                "reponame": "mnist-neural-networks",
                "description": "From-scratch implementation of training a multilayer neural network using backpropagation."
            },
            {
                "url": "https://github.com/psaikko/explain-mnist",
                "reponame": "explain-mnist",
                "image": "/assets/img/explain-mnist.png",
                "description": "Exact computation of adversarial examples and minimal explanations using a MIP/MIQP solver for neural network predictions on the MNIST dataset."
            }
        ]
    },{
        "name": "Graphics",
        "projects": [
            {
                "url": "https://github.com/psaikko/luola-intro",
                "reponame": "luola-intro",
                "image": "/assets/img/luola-intro.png",
                "description": "1k js intro for Assembly 2018. Voxel terrain rendering, heightmap generation, and fog effect in 1 kb of javascript."
            },
            {
                "url": "https://github.com/psaikko/raytrace",
                "reponame": "raytrace",
                "image": "https://raw.githubusercontent.com/psaikko/raytrace/master/img/screenshot.png",
                "description": "Minimal CPU-based multithreaded raytracer in C++. Some features include soft shadows, different material types, and real-time computation at small resolutions."
            },
            {
                "url": "https://github.com/psaikko/cuda-fractal",
                "reponame": "cuda-fractal",
                "image": "https://github.com/psaikko/cuda-fractal/raw/master/img/fractal.png",
                "description": "Mandelbrot set fractal visualization and exploration using Nvidia CUDA for computation and Qt5 for GUI."
            },
            {
                "url": "https://github.com/psaikko/raycast",
                "reponame": "raycast",
                "image": "https://raw.githubusercontent.com/psaikko/raycast/master/screenshot.png",
                "description": "A small raycasting graphics engine, as seen in e.g. Wolfenstein 3D and the Windows maze screensaver. Written in vanilla javascript."
            },
            {
                "url": "https://github.com/psaikko/cartoonify",
                "reponame": "cartoonify",
                "image": "https://raw.githubusercontent.com/psaikko/cartoonify/master/img/out.jpg",
                "description": "Forking a cartoon camera project to anonymize a webcam stream using OpenCV."
            }
        ]
    },{
        "name": "Algorithms",
        "projects": [
            {
                "url": "https://github.com/psaikko/slow-fourier-transform",
                "image": "/assets/img/slow-fourier-transform.png",
                "reponame": "slow-fourier-transform",
                "description": "Implementing a Fourier transform visualization as seen on 3blue1brown. Plotting in cartesian and polar coordinates with matplotlib."
            },
            {
                "url": "https://github.com/psaikko/string-algorithms-project",
                "reponame": "string-algorithms-project",
                "description": "Java implementations of multiple-exact-string-matching algorithms. Comparisons of Aho-Corasick, Karp-Rabin, and multipattern Shift-And."
            },
            {
                "url": "https://github.com/psaikko/interpreter-project",
                "reponame": "interpreter-project",
                "description": "Interpreter for a toy programming language in C#."
            },
            {
                "url": "https://github.com/psaikko/human-zip",
                "reponame": "human-zip",
                "description": "What if we could compress text while retaining readability by recursively abbreviating common phrases?"
            }
        ]
    },{
        "name": "Web",
        "projects": [
            {
                "url": "https://github.com/psaikko/rally-leaderboard",
                "reponame": "rally-leaderboard",
                "image": "/assets/img/rally-leaderboard.png",
                "description": "A highscores leaderboard web app for old PC rally games. With serverless.js backend on AWS lambda and github.io static frontend."
            },
            {
                "url": "https://github.com/psaikko/js-soundgen",
                "reponame": "js-soundgen",
                "description": "Code for procedurally creating a .wav file in a browser."
            },
            {
                "url": "https://github.com/psaikko/js-heightmap",
                "reponame": "js-heightmap",
                "image": "/assets/img/js-heightmap.png",
                "description": "Creating tileable heightmap textures in javascript using midpoint displacement / diamond-square algorithm."
            },
            {
                "url": "https://github.com/psaikko/psaikko.github.io",
                "reponame": "psaikko.github.io",
                "description": "You're looking at it. A Github pages site using Jekyll."
            }
        ]
    },{
        "name": "Optimization and SAT",
        "projects": [
            {
                "url": "https://github.com/psaikko/LMHS",
                "reponame": "LMHS",
                "description": "A weighted partial MaxSAT solver. Ranked first in the <a href=\"http://www.maxsat.udl.cat/15/results/index.html\"> 2015 MaxSAT Evaluation</a>."
            },
            {
                "url": "https://github.com/psaikko/ASP-HS",
                "reponame": "ASP-HS",
                "description": "Answer set optimization solver of KR'18 paper."
            },
            {
                "url": "https://github.com/psaikko/AbHS",
                "reponame": "AbHS",
                "description": "Propositional abduction solver of KR'16 paper. Computes optimal abductive explanations with an implicit hitting set algorithm."
            },
            {
                "url": "https://github.com/psaikko/sudokugen",
                "reponame": "sudokugen",
                "description": "Creating sudoku puzzles with provably minimal sets of clues with unique solutions. Uses SAT and SMT solvers via pySAT and pySMT libraries."
            },
            {
                "url": "https://github.com/psaikko/bitparallel-dpll",
                "reponame": "bitparallel-dpll",
                "description": "Experimenting with AVX2 instructions to build a bitparallel SAT solver."
            },
            {
                "url": "https://github.com/psaikko/tinysat",
                "reponame": "tinysat",
                "description": "Minimalistic CDCL SAT solver in javascript. Runs in browser or with node. Live at <a href=\"https://psaikko.github.io/tinysat\">github</a>."
            }
        ]
    },{
        "name": "Games and simulations",
        "projects": [
            {
                "url": "https://github.com/psaikko/mcts-reversi",
                "reponame": "mcts-reversi",
                "image": "/assets/img/mcts-reversi.png",
                "description": "Algorithms for playing Reversi (Othello). Minimax, UCB1, and UCT (Monte-Carlo tree search) implemented in C++. Includes a tournament setup for evaluating algorithms against each other."
            },
            {
                "url": "https://github.com/psaikko/gbe",
                "reponame": "gbe",
                "image": "https://raw.githubusercontent.com/psaikko/gbe/master/img/Game_screenshot.png",
                "description": "A playable emulator for the Nintendo Game Boy in C++. Emulates the Sharp LR35902 instruction set, tile-based graphics, and 4-channel audio. Graphics rendered using OpenGL (glfw) and sound output created with OpenAL (alut). Includes savestates and a python API for interacting with the emulator."
            },
            {
                "url": "https://github.com/psaikko/boids-sim",
                "reponame": "boids-sim",
                "image": "/assets/img/boids-sim.png",
                "description": "Flocking behavior simulation using a boids model. Shows emergent behavior from simple rules, with a javascript sandbox for experimentation."
            },
            {
                "url": "https://github.com/psaikko/tsuro-tiles",
                "reponame": "tsuro-tiles",
                "image": "/assets/img/tsuro-tiles.png",
                "description": "Computing and drawing all possible tiles for the board game Tsuro."
            },
            {
                "url": "https://github.com/psaikko/rally-decode",
                "reponame": "rally-decode",
                "description": "Reverse engineering old PC rally game save files."
            },
            {
                "url": "https://github.com/psaikko/java-sudoku",
                "reponame": "java-sudoku",
                "image": "/assets/img/java-sudoku.png",
                "description": "A visual sudoku solver, which gives step-by-step reasoning for each filled square. BSc data structures project coursework."
            },
            {
                "url": "https://github.com/psaikko/java-chess",
                "reponame": "java-chess",
                "image": "/assets/img/java-chess.png",
                "description": "A chess game with minimax AI and a GUI. First-year BSc programming project coursework."
            },
            {
                "url": "https://github.com/psaikko/HexPuzzle",
                "reponame": "HexPuzzle",
                "image": "/assets/img/hexpuzzle.png",
                "description": "Solving a puzzle with hexagonal tiles. C++ with a Qt gui."
            },
            {
                "url": "https://github.com/psaikko/asteroids",
                "reponame": "asteroids",
                "image": "/assets/img/asteroids.png",
                "description": "Retro-inspired asteroids game in javascript."
            },
            {
                "url": "https://github.com/psaikko/cuda-life",
                "reponame": "cuda-life",
                "description": "Conway's Game of Life computed on the GPU with CUDA."
            }
        ]
    },{
        "name": "Challenges and competitions",
        "projects": [
            {
                "url": "https://github.com/psaikko/AdventOfCode2019",
                "reponame": "AdventOfCode2019",
                "description": "Using the 2019 Advent of Code puzzles to learn Julia."
            },
            {
                "url": "https://github.com/psaikko/AdventOfCode2018",
                "reponame": "AdventOfCode2018",
                "description": "Brushing up on Ruby with the 2018 Advent of Code puzzles."
            },
            {
                "url": "https://github.com/psaikko/AdventOfCode2017",
                "reponame": "AdventOfCode2017",
                "description": "Python solutions to Advent of Code 2017 puzzles."
            },
            {
                "url": "https://github.com/psaikko/reaktor-santa",
                "reponame": "reaktor-santa",
                "image": "https://github.com/psaikko/reaktor-santa/raw/master/globe.gif",
                "description": "Scripts for the Reaktor traveling santa competition. Solving a multiple trip, weight-constrained traveling salesperson problem with local search and simulated annealing."
            },
            {
                "url": "https://github.com/psaikko/orbital",
                "reponame": "orbital",
                "image": "https://raw.githubusercontent.com/psaikko/orbital/master/screenshot.png",
                "description": "Solving a shortest-path problem in 3D space given (latitude, longitude, altitude) values."
            }
        ]
    },{
        "name": "Hardware",
        "projects": [
            {
                "url": "https://github.com/psaikko/teensy-dual-joysticks",
                "image": "/assets/img/teensy-dual-joysticks.jpg",
                "reponame": "teensy-dual-joysticks",
                "description": "Arduino project using a Teensy board to connect a pair of gameport interface joysticks to a modern PC using USB. Modifies the base USB gamepad code to register as two devices."
            },
            {
                "url": "https://github.com/psaikko/led-matrix",
                "reponame": "led-matrix",
                "image": "https://github.com/psaikko/led-matrix/raw/master/scroll.gif",
                "description": "A handmade 7x16 LED matrix display. Row and column addressing using shift registers. Controlled by Raspberry PI GPIO pins."
            }
        ]
    }
]}